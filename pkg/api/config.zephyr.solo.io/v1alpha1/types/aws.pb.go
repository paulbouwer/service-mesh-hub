// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/service-mesh-hub/api/config/v1alpha1/aws.proto

package types

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AwsConfig struct {
	AwsAccountConfigs    []*AwsAccountConfig `protobuf:"bytes,1,rep,name=aws_account_configs,json=awsAccountConfigs,proto3" json:"aws_account_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AwsConfig) Reset()         { *m = AwsConfig{} }
func (m *AwsConfig) String() string { return proto.CompactTextString(m) }
func (*AwsConfig) ProtoMessage()    {}
func (*AwsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{0}
}
func (m *AwsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsConfig.Unmarshal(m, b)
}
func (m *AwsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsConfig.Marshal(b, m, deterministic)
}
func (m *AwsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsConfig.Merge(m, src)
}
func (m *AwsConfig) XXX_Size() int {
	return xxx_messageInfo_AwsConfig.Size(m)
}
func (m *AwsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AwsConfig proto.InternalMessageInfo

func (m *AwsConfig) GetAwsAccountConfigs() []*AwsAccountConfig {
	if m != nil {
		return m.AwsAccountConfigs
	}
	return nil
}

type AwsAccountConfig struct {
	// AWS account ID.
	AccountId            string           `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	DiscoveryConfig      *DiscoveryConfig `protobuf:"bytes,2,opt,name=discovery_config,json=discoveryConfig,proto3" json:"discovery_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AwsAccountConfig) Reset()         { *m = AwsAccountConfig{} }
func (m *AwsAccountConfig) String() string { return proto.CompactTextString(m) }
func (*AwsAccountConfig) ProtoMessage()    {}
func (*AwsAccountConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{1}
}
func (m *AwsAccountConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsAccountConfig.Unmarshal(m, b)
}
func (m *AwsAccountConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsAccountConfig.Marshal(b, m, deterministic)
}
func (m *AwsAccountConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsAccountConfig.Merge(m, src)
}
func (m *AwsAccountConfig) XXX_Size() int {
	return xxx_messageInfo_AwsAccountConfig.Size(m)
}
func (m *AwsAccountConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsAccountConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AwsAccountConfig proto.InternalMessageInfo

func (m *AwsAccountConfig) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AwsAccountConfig) GetDiscoveryConfig() *DiscoveryConfig {
	if m != nil {
		return m.DiscoveryConfig
	}
	return nil
}

//
//Configure which AWS resources should be discovered by SMH.
//For unspecified or null fields, discovery will not run for the corresponding AWS resource type.
type DiscoveryConfig struct {
	Appmesh              *DiscoverySelectors `protobuf:"bytes,1,opt,name=appmesh,proto3" json:"appmesh,omitempty"`
	Eks                  *DiscoverySelectors `protobuf:"bytes,2,opt,name=eks,proto3" json:"eks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DiscoveryConfig) Reset()         { *m = DiscoveryConfig{} }
func (m *DiscoveryConfig) String() string { return proto.CompactTextString(m) }
func (*DiscoveryConfig) ProtoMessage()    {}
func (*DiscoveryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{2}
}
func (m *DiscoveryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryConfig.Unmarshal(m, b)
}
func (m *DiscoveryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryConfig.Marshal(b, m, deterministic)
}
func (m *DiscoveryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryConfig.Merge(m, src)
}
func (m *DiscoveryConfig) XXX_Size() int {
	return xxx_messageInfo_DiscoveryConfig.Size(m)
}
func (m *DiscoveryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryConfig proto.InternalMessageInfo

func (m *DiscoveryConfig) GetAppmesh() *DiscoverySelectors {
	if m != nil {
		return m.Appmesh
	}
	return nil
}

func (m *DiscoveryConfig) GetEks() *DiscoverySelectors {
	if m != nil {
		return m.Eks
	}
	return nil
}

//
//An AWS resource will be selected if *any* of the resource_selectors apply.
//For a given resource_selector to apply to a resource, the resource must match *all* of the resource_selector's match criteria.
type DiscoverySelectors struct {
	ResourceSelectors    []*ResourceSelector `protobuf:"bytes,1,rep,name=resource_selectors,json=resourceSelectors,proto3" json:"resource_selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DiscoverySelectors) Reset()         { *m = DiscoverySelectors{} }
func (m *DiscoverySelectors) String() string { return proto.CompactTextString(m) }
func (*DiscoverySelectors) ProtoMessage()    {}
func (*DiscoverySelectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{3}
}
func (m *DiscoverySelectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverySelectors.Unmarshal(m, b)
}
func (m *DiscoverySelectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverySelectors.Marshal(b, m, deterministic)
}
func (m *DiscoverySelectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverySelectors.Merge(m, src)
}
func (m *DiscoverySelectors) XXX_Size() int {
	return xxx_messageInfo_DiscoverySelectors.Size(m)
}
func (m *DiscoverySelectors) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverySelectors.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverySelectors proto.InternalMessageInfo

func (m *DiscoverySelectors) GetResourceSelectors() []*ResourceSelector {
	if m != nil {
		return m.ResourceSelectors
	}
	return nil
}

type ResourceSelector struct {
	// Types that are valid to be assigned to MatcherType:
	//	*ResourceSelector_Arn
	//	*ResourceSelector_Matcher_
	MatcherType          isResourceSelector_MatcherType `protobuf_oneof:"matcher_type"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ResourceSelector) Reset()         { *m = ResourceSelector{} }
func (m *ResourceSelector) String() string { return proto.CompactTextString(m) }
func (*ResourceSelector) ProtoMessage()    {}
func (*ResourceSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{4}
}
func (m *ResourceSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceSelector.Unmarshal(m, b)
}
func (m *ResourceSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceSelector.Marshal(b, m, deterministic)
}
func (m *ResourceSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceSelector.Merge(m, src)
}
func (m *ResourceSelector) XXX_Size() int {
	return xxx_messageInfo_ResourceSelector.Size(m)
}
func (m *ResourceSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceSelector.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceSelector proto.InternalMessageInfo

type isResourceSelector_MatcherType interface {
	isResourceSelector_MatcherType()
	Equal(interface{}) bool
}

type ResourceSelector_Arn struct {
	Arn string `protobuf:"bytes,1,opt,name=arn,proto3,oneof" json:"arn,omitempty"`
}
type ResourceSelector_Matcher_ struct {
	Matcher *ResourceSelector_Matcher `protobuf:"bytes,2,opt,name=matcher,proto3,oneof" json:"matcher,omitempty"`
}

func (*ResourceSelector_Arn) isResourceSelector_MatcherType()      {}
func (*ResourceSelector_Matcher_) isResourceSelector_MatcherType() {}

func (m *ResourceSelector) GetMatcherType() isResourceSelector_MatcherType {
	if m != nil {
		return m.MatcherType
	}
	return nil
}

func (m *ResourceSelector) GetArn() string {
	if x, ok := m.GetMatcherType().(*ResourceSelector_Arn); ok {
		return x.Arn
	}
	return ""
}

func (m *ResourceSelector) GetMatcher() *ResourceSelector_Matcher {
	if x, ok := m.GetMatcherType().(*ResourceSelector_Matcher_); ok {
		return x.Matcher
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResourceSelector) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResourceSelector_Arn)(nil),
		(*ResourceSelector_Matcher_)(nil),
	}
}

// Selects all resources that exist in the specified AWS region and possess the specified tags.
type ResourceSelector_Matcher struct {
	// AWS regions, e.g. us-east-2. If unspecified, select across all regions.
	Regions []string `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	// AWS resource tags. If unspecified, match any tags.
	Tags                 map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourceSelector_Matcher) Reset()         { *m = ResourceSelector_Matcher{} }
func (m *ResourceSelector_Matcher) String() string { return proto.CompactTextString(m) }
func (*ResourceSelector_Matcher) ProtoMessage()    {}
func (*ResourceSelector_Matcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_a82bc3d7b953f0ec, []int{4, 0}
}
func (m *ResourceSelector_Matcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceSelector_Matcher.Unmarshal(m, b)
}
func (m *ResourceSelector_Matcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceSelector_Matcher.Marshal(b, m, deterministic)
}
func (m *ResourceSelector_Matcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceSelector_Matcher.Merge(m, src)
}
func (m *ResourceSelector_Matcher) XXX_Size() int {
	return xxx_messageInfo_ResourceSelector_Matcher.Size(m)
}
func (m *ResourceSelector_Matcher) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceSelector_Matcher.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceSelector_Matcher proto.InternalMessageInfo

func (m *ResourceSelector_Matcher) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *ResourceSelector_Matcher) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*AwsConfig)(nil), "config.zephyr.solo.io.AwsConfig")
	proto.RegisterType((*AwsAccountConfig)(nil), "config.zephyr.solo.io.AwsAccountConfig")
	proto.RegisterType((*DiscoveryConfig)(nil), "config.zephyr.solo.io.DiscoveryConfig")
	proto.RegisterType((*DiscoverySelectors)(nil), "config.zephyr.solo.io.DiscoverySelectors")
	proto.RegisterType((*ResourceSelector)(nil), "config.zephyr.solo.io.ResourceSelector")
	proto.RegisterType((*ResourceSelector_Matcher)(nil), "config.zephyr.solo.io.ResourceSelector.Matcher")
	proto.RegisterMapType((map[string]string)(nil), "config.zephyr.solo.io.ResourceSelector.Matcher.TagsEntry")
}

func init() {
	proto.RegisterFile("github.com/solo-io/service-mesh-hub/api/config/v1alpha1/aws.proto", fileDescriptor_a82bc3d7b953f0ec)
}

var fileDescriptor_a82bc3d7b953f0ec = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x9d, 0xb4, 0x40, 0x95, 0x5b, 0xc4, 0x74, 0xcc, 0x20, 0x55, 0x95, 0x40, 0x55, 0x16, 0x50,
	0x16, 0x75, 0x34, 0x65, 0xc1, 0x6b, 0xd5, 0x19, 0x90, 0x06, 0xa1, 0x91, 0xc0, 0xa0, 0x41, 0x62,
	0x53, 0xb9, 0x8e, 0x49, 0xac, 0xa6, 0x71, 0x64, 0x27, 0xad, 0xc2, 0x9a, 0x3f, 0xe0, 0x27, 0x90,
	0x58, 0xf1, 0x4b, 0x7c, 0x09, 0x72, 0xec, 0xf0, 0x08, 0xa0, 0x99, 0xee, 0x72, 0x8f, 0xcf, 0x39,
	0xf7, 0x5c, 0x3b, 0x17, 0xe6, 0xb1, 0x28, 0x92, 0x72, 0x89, 0x99, 0x5c, 0x87, 0x5a, 0xa6, 0x72,
	0x2a, 0x64, 0xa8, 0xb9, 0xda, 0x08, 0xc6, 0xa7, 0x6b, 0xae, 0x93, 0x69, 0x52, 0x2e, 0x43, 0x9a,
	0x8b, 0x90, 0xc9, 0xec, 0x83, 0x88, 0xc3, 0xcd, 0x11, 0x4d, 0xf3, 0x84, 0x1e, 0x85, 0x74, 0xab,
	0x71, 0xae, 0x64, 0x21, 0xd1, 0x2d, 0x7b, 0x84, 0x3f, 0xf2, 0x3c, 0xa9, 0x14, 0x36, 0x2e, 0x58,
	0xc8, 0xd1, 0x61, 0x2c, 0x63, 0x59, 0x33, 0x42, 0xf3, 0x65, 0xc9, 0x41, 0x04, 0xfe, 0x7c, 0xab,
	0x4f, 0x6a, 0x05, 0x7a, 0x07, 0x37, 0xe9, 0x56, 0x2f, 0x28, 0x63, 0xb2, 0xcc, 0x8a, 0x85, 0xf5,
	0xd1, 0x43, 0x6f, 0xdc, 0x9d, 0xf4, 0x67, 0xf7, 0xf0, 0x3f, 0x7d, 0xf1, 0x7c, 0xab, 0xe7, 0x56,
	0x60, 0x5d, 0xc8, 0x01, 0x6d, 0x21, 0x3a, 0xf8, 0xe4, 0xc1, 0xa0, 0xcd, 0x43, 0xb7, 0x01, 0x9a,
	0x4e, 0x22, 0x1a, 0x7a, 0x63, 0x6f, 0xe2, 0x13, 0xdf, 0x21, 0x2f, 0x22, 0xf4, 0x1a, 0x06, 0x91,
	0xd0, 0x4c, 0x6e, 0xb8, 0xaa, 0x5c, 0x94, 0x61, 0x67, 0xec, 0x4d, 0xfa, 0xb3, 0xbb, 0xff, 0x49,
	0xf2, 0xac, 0xa1, 0xbb, 0x20, 0xfb, 0xd1, 0x9f, 0x40, 0xf0, 0xd9, 0x83, 0xfd, 0x16, 0x09, 0x9d,
	0x40, 0x8f, 0xe6, 0xb9, 0xb9, 0xda, 0x3a, 0x42, 0x7f, 0x76, 0xff, 0x22, 0xf7, 0x37, 0x3c, 0xe5,
	0xac, 0x90, 0x4a, 0x93, 0x46, 0x89, 0x9e, 0x42, 0x97, 0xaf, 0xb4, 0x8b, 0xb7, 0x83, 0x81, 0x51,
	0x05, 0x29, 0xa0, 0xbf, 0x8f, 0xd0, 0x39, 0x20, 0xc5, 0xb5, 0x2c, 0x15, 0xe3, 0x0b, 0xdd, 0xa0,
	0x17, 0x3c, 0x05, 0x71, 0x82, 0xc6, 0x85, 0x1c, 0xa8, 0x16, 0xa2, 0x83, 0x6f, 0x1d, 0x18, 0xb4,
	0x79, 0x08, 0x41, 0x97, 0xaa, 0xcc, 0xbe, 0xc1, 0xe9, 0x1e, 0x31, 0x05, 0x7a, 0x09, 0xbd, 0x35,
	0x2d, 0x58, 0xc2, 0x95, 0x9b, 0x2b, 0xbc, 0x64, 0x57, 0x7c, 0x66, 0x65, 0xa7, 0x7b, 0xa4, 0x71,
	0x18, 0x7d, 0xf5, 0xa0, 0xe7, 0x60, 0x34, 0x84, 0x9e, 0xe2, 0xb1, 0x90, 0x99, 0x1d, 0xc7, 0x27,
	0x4d, 0x89, 0xce, 0xe0, 0x4a, 0x41, 0x63, 0x73, 0x8f, 0x66, 0xca, 0xc7, 0x3b, 0xf6, 0xc3, 0x6f,
	0x69, 0xac, 0x9f, 0x67, 0x85, 0xaa, 0x48, 0x6d, 0x33, 0x7a, 0x08, 0xfe, 0x4f, 0x08, 0x0d, 0xa0,
	0xbb, 0xe2, 0x95, 0xfb, 0xcd, 0xcc, 0x27, 0x3a, 0x84, 0xab, 0x1b, 0x9a, 0x96, 0xbc, 0x1e, 0xcf,
	0x27, 0xb6, 0x78, 0xd2, 0x79, 0xe4, 0x1d, 0xdf, 0x80, 0xeb, 0x2e, 0xf8, 0xa2, 0xa8, 0x72, 0x7e,
	0x7c, 0xfe, 0xe5, 0xfb, 0x1d, 0xef, 0xfd, 0xab, 0xcb, 0xac, 0x66, 0xbe, 0x8a, 0x7f, 0x5b, 0xcf,
	0x56, 0xf4, 0x5f, 0xdb, 0x6a, 0x6c, 0xf5, 0xf2, 0x5a, 0xbd, 0x83, 0x0f, 0x7e, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x5d, 0x05, 0x02, 0xa4, 0xf5, 0x03, 0x00, 0x00,
}

func (this *AwsConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsConfig)
	if !ok {
		that2, ok := that.(AwsConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.AwsAccountConfigs) != len(that1.AwsAccountConfigs) {
		return false
	}
	for i := range this.AwsAccountConfigs {
		if !this.AwsAccountConfigs[i].Equal(that1.AwsAccountConfigs[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AwsAccountConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AwsAccountConfig)
	if !ok {
		that2, ok := that.(AwsAccountConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if !this.DiscoveryConfig.Equal(that1.DiscoveryConfig) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DiscoveryConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DiscoveryConfig)
	if !ok {
		that2, ok := that.(DiscoveryConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Appmesh.Equal(that1.Appmesh) {
		return false
	}
	if !this.Eks.Equal(that1.Eks) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DiscoverySelectors) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DiscoverySelectors)
	if !ok {
		that2, ok := that.(DiscoverySelectors)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ResourceSelectors) != len(that1.ResourceSelectors) {
		return false
	}
	for i := range this.ResourceSelectors {
		if !this.ResourceSelectors[i].Equal(that1.ResourceSelectors[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ResourceSelector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ResourceSelector)
	if !ok {
		that2, ok := that.(ResourceSelector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.MatcherType == nil {
		if this.MatcherType != nil {
			return false
		}
	} else if this.MatcherType == nil {
		return false
	} else if !this.MatcherType.Equal(that1.MatcherType) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ResourceSelector_Arn) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ResourceSelector_Arn)
	if !ok {
		that2, ok := that.(ResourceSelector_Arn)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Arn != that1.Arn {
		return false
	}
	return true
}
func (this *ResourceSelector_Matcher_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ResourceSelector_Matcher_)
	if !ok {
		that2, ok := that.(ResourceSelector_Matcher_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Matcher.Equal(that1.Matcher) {
		return false
	}
	return true
}
func (this *ResourceSelector_Matcher) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ResourceSelector_Matcher)
	if !ok {
		that2, ok := that.(ResourceSelector_Matcher)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Regions) != len(that1.Regions) {
		return false
	}
	for i := range this.Regions {
		if this.Regions[i] != that1.Regions[i] {
			return false
		}
	}
	if len(this.Tags) != len(that1.Tags) {
		return false
	}
	for i := range this.Tags {
		if this.Tags[i] != that1.Tags[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
